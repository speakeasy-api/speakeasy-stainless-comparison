/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type NewOrder = {
    user: number;
    products: Array<number>;
};

/** @internal */
export namespace NewOrder$ {
    export const inboundSchema: z.ZodType<NewOrder, z.ZodTypeDef, unknown> = z
        .object({
            user: z.number().int(),
            products: z.array(z.number().int()),
        })
        .transform((v) => {
            return {
                user: v.user,
                products: v.products,
            };
        });

    export type Outbound = {
        user: number;
        products: Array<number>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, NewOrder> = z
        .object({
            user: z.number().int(),
            products: z.array(z.number().int()),
        })
        .transform((v) => {
            return {
                user: v.user,
                products: v.products,
            };
        });
}
