/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type CreateOrderResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Order created successfully
     */
    order?: components.Order | undefined;
};

/** @internal */
export namespace CreateOrderResponse$ {
    export const inboundSchema: z.ZodType<CreateOrderResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            Order: components.Order$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.Order === undefined ? null : { order: v.Order }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        Order?: components.Order$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateOrderResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            order: components.Order$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.order === undefined ? null : { Order: v.order }),
            };
        });
}
